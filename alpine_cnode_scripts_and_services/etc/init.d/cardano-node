#!/sbin/openrc-run

name=$RC_SVCNAME
description="Cardano node service"

depend() {
	after network-online
}

source /home/ada/cnode_env
start_pre() {

	if [ "$CARDANO_RUN_MODE" = 1 ] || [ "$CARDANO_RUN_MODE" = 2  ]; then

		if [ ! -d $CARDANO_DB_PATH ]; then
                        eerror ''
                        eerror 'Check CARDANO_DB_PATH in ~/cnode_env'
                        eerror ''
                        return 0
                fi

                if [ ! -f $CARDANO_TOPOLOGY_PATH ]; then
                        eerror ''
                        eerror 'Check CARDANO_TOPOLOGY_PATH in ~/cnode_env'
                        eerror ''
                        return 1
                fi
                if [ ! -f $CARDANO_CONFIG_PATH ]; then
                        eerror ''
                        eerror 'Check CARDANO_CONFIG_PATH in ~/cnode_env'
                        eerror ''
                        return 1
                fi

                if [ -z $CARDANO_NODE_SOCKET_PATH ]; then
                        eerror ''
                        eerror 'Check CARDANO_NODE_SOCKET_PATH in ~/cnode_env'
                        eerror ''
                        return 1
                fi
                if [ -z $CARDANO_PORT ]; then
                        eerror ''
                        eerror 'Check CARDANO_PORT in ~/cnode_env'
                        eerror ''
                        return 1
                fi
                if [ -z $CARDANO_HOST_ADDRESS ]; then
                        eerror ''
                        eerror 'Check CARDANO_HOST_ADDRESS in ~/cnode_env'
                        eerror ''
                        return 1
                fi

		if [ "$CARDANO_RUN_MODE" = 2  ]; then
                	if [ ! -f $CARDANO_VRF_KEY_PATH ]; then
                        	eerror ''
                        	eerror 'Ensure your poolname.vrf.skey is present in ~/pi-pool.'
				eerror 'Check CARDANO_VRF_KEY_PATH in ~/cnode_env if file is present.'
                        	eerror ''
                        	return 1
                	fi
                        if [ ! -f $CARDANO_KES_KEY_PATH ]; then
                                eerror ''
                                eerror 'Ensure your poolname.kes.skey is present in ~/pi-pool.'
                                eerror 'Check CARDANO_KES_KEY_PATH in ~/cnode_env if file is present.'
                                eerror ''
                                return 1
                        fi
                        if [ ! -f $CARDANO_OP_CERT_PATH ]; then
                                eerror ''
                                eerror 'Ensure your poolname.opcert is present in ~/pi-pool.'
                                eerror 'Check CARDANO_OP_CERT_PATH in ~/cnode_env if file is present.'
                                eerror ''
                                return 1
                        fi

			if [ `ls -l $CARDANO_VRF_KEY_PATH | wc -l` -gt 1 ]; then
				eerror ''
				eerror 'You have multiple VRF signing keys present.'
				eerror 'Ensure only one *.*vrf*.skey file is placed in the folder ~/pi-pool'
				eerror ''
				return 1
			fi
                        if [ `ls -l $CARDANO_KES_KEY_PATH | wc -l` -gt 1 ]; then
                                eerror ''
                                eerror 'You have multiple KES signing keys present.'
                                eerror 'Ensure only one *.*kes*.skey file is placed in the folder ~/pi-pool'
                                eerror ''
                                return 1
                        fi
                        if [ `ls -l $CARDANO_OP_CERT_PATH | wc -l` -gt 1 ]; then
                                eerror ''
                                eerror 'You have multiple operational certificates present.'
                                eerror 'Ensure only one *.opcert file is placed in the folder ~/pi-pool'
                                eerror ''
                                return 1
                        fi

		echo "Initial checks complete"

		return 0
		fi

	else
		eerror ''
		eerror 'Invalid run mode. Check CARDANO_RUN_MODE in ~/cnode_env'
		eerror ''
		return 1
	fi

}

start() {

      if [ "$CARDANO_RUN_MODE" = 1 ]; then
        ebegin "Starting $RC_SVCNAME Relay Mode"
        start-stop-daemon --background --start --exec /home/ada/.local/bin/cardano-node run \
        --make-pidfile --pidfile /var/run/cardano-node.pid \
        -- --topology $CARDANO_TOPOLOGY_PATH \
           --database-path $CARDANO_DB_PATH \
           --socket-path $CARDANO_NODE_SOCKET_PATH \
           --host-addr $CARDANO_HOST_ADDRESS \
           --port $CARDANO_PORT \
           --config $CARDANO_CONFIG_PATH
        eend $?
      fi


      if [ "$CARDANO_RUN_MODE" = 2 ]; then
        ebegin "Starting $RC_SVCNAME Block Producer Mode"
        start-stop-daemon --background --start --exec /home/ada/.local/bin/cardano-node run \
        --make-pidfile --pidfile /var/run/cardano-node.pid \
        -- --topology $CARDANO_TOPOLOGY_PATH \
           --database-path $CARDANO_DB_PATH \
           --socket-path $CARDANO_NODE_SOCKET_PATH \
           --port $CARDANO_PORT \
           --config $CARDANO_CONFIG_PATH \
           --shelley-vrf-key $CARDANO_VRF_KEY_PATH \
           --shelley-kes-key $CARDANO_KES_KEY_PATH \
           --shelley-operational-certificate $CARDANO_OP_CERT_PATH
        eend $?
      fi

}

start_post() {

rcstatus=blank
        while [ -f /var/run/cardano-node.pid ]
        do
                sleep 10
                rcstatus=`rc-service $RC_SVCNAME status | awk '{print $NF}'`
                if [ -z $rcstatus ]; then
                        rc-service -c $RC_SVCNAME restart
                        break
                fi
        done &

	if [ "$RUNTIME" = 0 ] ; then
		return 0
	else
		ebegin "$RC_SVCNAME will auto-restart in $RUNTIME seconds"
	     	start-stop-daemon --background --start --exec /home/ada/pi-pool/autorestart_pi-pool.sh \
             	--make-pidfile --pidfile /var/run/cardano-autorestart.pid
		eend $?
	fi
}

stop() {
	ebegin "Stopping $RC_SVCNAME"
        start-stop-daemon --stop --exec /home/ada/.local/bin/cardano-node run \
        --pidfile /var/run/cardano-node.pid \
        -s 2
        eend $?
}

stop_post() {

        if [ ! -f /var/run/cardano-autorestart.pid  ]; then
                return 0
        else
		ebegin "Stopping auto-restart script"
             	start-stop-daemon --stop --exec /home/ada/pi-pool/autorestart_pi-pool.sh \
             	--pidfile /var/run/cardano-autorestart.pid
		eend $?
	fi
}
